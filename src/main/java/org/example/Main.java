package org.example;

import org.example.service.InventoryService;
import org.example.service.UserService;
import org.example.dao.ProductDAOImpl;
import org.example.dao.UserDAOImpl;
import org.example.exception.InvalidProductException;
import org.example.model.Product;
import org.example.model.User;
import org.example.util.CSVHelper;
import org.example.util.EmailUtil;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        UserService userService = new UserService();
        UserDAOImpl userDAO = new UserDAOImpl();

        System.out.println("==========================================");
        System.out.println("üõí  WELCOME TO INVENTORY MANAGEMENT SYSTEM");
        System.out.println("==========================================");
        while (true) {
            System.out.println("\nüåê MAIN MENU");
            System.out.println("1Ô∏è‚É£  Login");
            System.out.println("2Ô∏è‚É£  Register");
            System.out.println("3Ô∏è‚É£  Exit");
            System.out.print("‚û°Ô∏è  Enter your choice: ");

            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1 -> {
                    System.out.println("\nüîê LOGIN");
                    System.out.print("üë§ Username: ");
                    String username = sc.nextLine();
                    System.out.print("üîë Password: ");
                    String password = sc.nextLine();

                    User user = userService.login(username, password);
                    if (user == null) {
                        System.out.println("‚ùå Invalid credentials! Please try again.");
                    } else {
                        if (user.getRole().equalsIgnoreCase("admin")) {
                            AdminMenu(sc);
                        } else {
                            UserMenu(sc);
                        }
                    }
                }

                case 2 -> {
                    System.out.println("\nüìù REGISTER NEW ACCOUNT");
                    System.out.print("üë§ Choose a Username: ");
                    String username = sc.nextLine();
                    System.out.print("üîë Choose a Password: ");
                    String password = sc.nextLine();

                    User newUser = new User(username, password, "User");
                    userDAO.addUser(newUser);

                    System.out.println("üéâ Registration successful! You can now log in.");
                }

                case 3 -> {
                    System.out.println("\nüëã Thank you for using the Inventory Management System!");
                    System.out.println("üí° Have a great day!");
                    sc.close();
                    return;
                }

                default -> System.out.println("‚ö†Ô∏è  Invalid choice! Please enter 1, 2, or 3.");
            }
        }
    }

    // ==================== ADMIN MENU ====================
    public static void AdminMenu(Scanner sc) {
        InventoryService service = new InventoryService();
        ProductDAOImpl dao = new ProductDAOImpl();
        while (true) {
            System.out.println("\n========================");
            System.out.println("üßë‚Äçüíº ADMIN DASHBOARD");
            System.out.println("========================");
            System.out.println("1Ô∏è‚É£  ‚ûï Add Product");
            System.out.println("2Ô∏è‚É£  üëÅÔ∏è View All Products");
            System.out.println("3Ô∏è‚É£  üîç Search Product");
            System.out.println("4Ô∏è‚É£  ‚úèÔ∏è Update Product");
            System.out.println("5Ô∏è‚É£  üóëÔ∏è Delete Product");
            System.out.println("6Ô∏è‚É£  üìä Generate CSV Report");
            System.out.println("7Ô∏è‚É£  üö™ Logout");
            System.out.print("‚û°Ô∏è  Enter choice: ");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1 -> {
                    try {
                        System.out.print("ü™™Product ID: ");
                        int id = sc.nextInt();
                        System.out.print("üì¶ Product Name: ");
                        String name = sc.next();
                        System.out.print("üè∑Ô∏è Category: ");
                        String category = sc.next();
                        System.out.print("üì¶ Quantity: ");
                        int qty = sc.nextInt();
                        System.out.print("üí∞ Price: ");
                        double price = sc.nextDouble();
                        System.out.print("ùçå Threshold: ");
                        int threshold = sc.nextInt();
                        Product p = new Product(id, name, category, qty, price,threshold);
                        service.addProduct(p);
                    } catch (InvalidProductException e) {
                        System.out.println("‚ö†Ô∏è Invalid Product: " + e.getMessage());
                    }
                }

                case 2 -> service.getAllProducts();

                case 3 -> {
                    System.out.println("\nüîé SEARCH OPTIONS");
                    System.out.println("1Ô∏è‚É£ By ID");
                    System.out.println("2Ô∏è‚É£ By Name");
                    System.out.println("3Ô∏è‚É£ By Category");
                    System.out.println("4Ô∏è‚É£ By Price Range");
                    System.out.print("‚û°Ô∏è Enter choice: ");
                    int sChoice = sc.nextInt();
                    sc.nextLine();

                    switch (sChoice) {
                        case 1 -> {
                            System.out.print("Enter Product ID: ");
                            int id = sc.nextInt();
                            try {
                                service.getProductById(id);
                            } catch (InvalidProductException e) {
                                System.out.println(e.getMessage());
                            }
                        }
                        case 2 -> {
                            System.out.print("Enter Product Name: ");
                            service.getProductByName(sc.nextLine());
                        }
                        case 3 -> {
                            System.out.print("Enter Category: ");
                            service.getProductByCategory(sc.nextLine());
                        }
                        case 4 -> {
                            System.out.print("Enter Min Price: ");
                            double min = sc.nextDouble();
                            System.out.print("Enter Max Price: ");
                            double max = sc.nextDouble();
                            service.getProductByPriceRange(min, max);
                        }
                        default -> System.out.println("‚ùå Invalid search option!");
                    }
                }

                case 4 -> {
                    System.out.print("Enter Product ID to Update: ");
                    int id = sc.nextInt();
                    sc.nextLine();
                    System.out.print("üìù New Name (or press Enter to skip): ");
                    String name = sc.nextLine();
                    System.out.print("üè∑Ô∏è New Category (or press Enter to skip): ");
                    String cat = sc.nextLine();
                    System.out.print("üì¶ New Quantity (or press Enter to skip): ");
                    String qty = sc.nextLine();
                    System.out.print("üí∞ New Price (or press Enter to skip): ");
                    String price = sc.nextLine();
                    System.out.print("New Threshold (or press Enter to skip): ");
                    String threshold = sc.nextLine();
                    service.updateProduct(id, name, cat, qty, price,threshold);
                }

                case 5 -> {
                    System.out.print("Enter Product ID to Delete: ");
                    int delId = sc.nextInt();
                    service.deleteProduct(delId);
                }

                case 6 -> {
                    var products = dao.getAllProducts();
                    String filepath = CSVHelper.generateProductsReport(products, "Admin");
                    EmailUtil.sendReport("admin@gmail.com", "Inventory Management Report",
                            "Attached is your latest Inventory Report", filepath);
                    System.out.println("üìß Report emailed successfully!");
                }

                case 7 -> {
                    System.out.println("üëã Logging out of Admin Dashboard...");
                    return;
                }

                default -> System.out.println("‚ùå Invalid choice!");
            }
        }
    }

    // ==================== USER MENU ====================
    public static void UserMenu(Scanner sc) {
        InventoryService service = new InventoryService();
        while (true) {
            System.out.println("\n======================");
            System.out.println("üôã USER DASHBOARD");
            System.out.println("======================");
            System.out.println("1Ô∏è‚É£  üëÅÔ∏è View All Products");
            System.out.println("2Ô∏è‚É£  üîç Search Product");
            System.out.println("3Ô∏è‚É£  üö™ Logout");
            System.out.print("‚û°Ô∏è  Enter choice: ");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1 -> service.getAllProducts();
                case 2 -> {
                    System.out.println("\nüîé SEARCH OPTIONS");
                    System.out.println("1Ô∏è‚É£ By ID");
                    System.out.println("2Ô∏è‚É£ By Name");
                    System.out.println("3Ô∏è‚É£ By Category");
                    System.out.println("4Ô∏è‚É£ By Price Range");
                    System.out.print("‚û°Ô∏è Enter choice: ");
                    int sChoice = sc.nextInt();
                    sc.nextLine();
                    switch (sChoice) {
                        case 1 -> {
                            System.out.print("Enter Product ID: ");
                            int id = sc.nextInt();
                            try {
                                service.getProductById(id);
                            } catch (InvalidProductException e) {
                                System.out.println(e.getMessage());
                            }
                        }
                        case 2 -> {
                            System.out.print("Enter Product Name: ");
                            service.getProductByName(sc.nextLine());
                        }
                        case 3 -> {
                            System.out.print("Enter Product Category: ");
                            service.getProductByCategory(sc.nextLine());
                        }
                        case 4 -> {
                            System.out.print("Enter Min Price: ");
                            double min = sc.nextDouble();
                            System.out.print("Enter Max Price: ");
                            double max = sc.nextDouble();
                            service.getProductByPriceRange(min, max);
                        }
                        default -> System.out.println("‚ùå Invalid search option!");
                    }
                }
                case 3 -> {
                    System.out.println("üëã Logging out...");
                    return;
                }
                default -> System.out.println("‚ùå Invalid choice!");
            }
        }
    }
}
